#include "avm32/avm32.hpp"

int main() {

    std::vector<int32_t> Hellowold = {
            (int32_t) 0b00000000000000000000000001001000,   //push 72
            (int32_t) 0b01000000000000000000000000000111,   //printc
            (int32_t) 0b00000000000000000000000001100101,   //push 101
            (int32_t) 0b01000000000000000000000000000111,   //printc
            (int32_t) 0b00000000000000000000000001101100,   //push 108
            (int32_t) 0b01000000000000000000000000000111,   //printc
            (int32_t) 0b00000000000000000000000001101100,   //push 108
            (int32_t) 0b01000000000000000000000000000111,   //printc
            (int32_t) 0b00000000000000000000000001101111,   //push 111
            (int32_t) 0b01000000000000000000000000000111,   //printc
            (int32_t) 0b00000000000000000000000000100000,   //push 32
            (int32_t) 0b01000000000000000000000000000111,   //printc
            (int32_t) 0b00000000000000000000000001110111,   //push 119
            (int32_t) 0b01000000000000000000000000000111,   //printc
            (int32_t) 0b00000000000000000000000001101111,   //push 111
            (int32_t) 0b01000000000000000000000000000111,   //printc
            (int32_t) 0b00000000000000000000000001110010,   //push 114
            (int32_t) 0b01000000000000000000000000000111,   //printc
            (int32_t) 0b00000000000000000000000001101100,   //push 108
            (int32_t) 0b01000000000000000000000000000111,   //printc
            (int32_t) 0b00000000000000000000000001100100,   //push 100
            (int32_t) 0b01000000000000000000000000000111,   //printc
            (int32_t) 0b00000000000000000000000000001010,   //push 12
            (int32_t) 0b01000000000000000000000000000111,   //printc
            (int32_t) 0b01000000000000000000000000000000,   //exit
    };

    AVM32 vm(Hellowold.size(), 10);
    vm.loadProgram(Hellowold);
    vm.run();
    return 0;
}
